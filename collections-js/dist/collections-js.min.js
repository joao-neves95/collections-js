class Errors{static get existingKey(){throw new Error("An item with the same key has already been added.")}static get noTypeProvided(){throw new Error("No type provided on Collection instantiation.")}static wrongType(e){throw new Error(`The value is not from the same type as the List<${e}>`)}}try{module.exports=Errors}catch(e){}let ____errors0,____errors1,____errors2;try{____errors0=require("./errors")}catch(e){____errors0=Errors}class Collection{constructor(e=!1,t="any"){if(this.elements=[],this.uniqueKeys=e,!t)throw ____errors0.noTypeProvided;this.type=t}get length(){return this.elements.length}get isEmpty(){return this.length<=0}get __last(){return this.elements[this.length-1]}getAll(){return this.elements}get(e){return this.elements[e]}clear(){this.elements=[]}__forEach(e){for(let t=0;t<this.elements.length;++t)e(this.elements[t])}push(e){this.elements.push(e)}splice(e){this.elements.splice(e,1)}}try{module.exports=Collection}catch(e){}try{____errors1=require("./errors")}catch(e){____errors1=Errors}class Dictionary extends Collection{constructor(e){super(e,"any")}get lastValue(){try{return Object.values(this.__last)[0]}catch(e){return!1}}getAllValues(){let e=[];for(let t=0;t<this.elements.length;++t)e.push(Object.values(this.elements[t])[0]);return e}add(e,t){if(this.uniqueKeys&&!1!==this.findIndexOfKey(e))throw new Error(____errors1.existingKey);this.push({[e]:t})}remove(e){const t=this.findIndexOfKey(e);return!1!==t&&(this.splice(t,1),!0)}updateByKey(e,t){const r=this.findIndexOfKey(e);return!1!==r&&this.updateByIndex(r,t)}updateByIndex(e,t){try{return Object.defineProperty(this.elements[e],key,{value:t}),!0}catch(e){return!1}}getByIndex(e){return Object.values(this.elements[e])[0]}getKeyByIndex(e){return Object.keys(this.elements[e])[0]}getByKey(e){try{const t=this.findIndexOfKey(e);return!1!==t&&this.elements[t][e]}catch(e){console.error(e)}}findIndexOfKey(e){for(let t=0;t<this.elements.length;t++)if(Object.keys(this.elements[t])[0]===e)return t;return!1}forEachValue(e){this.__forEach(t=>{e(Object.values(t)[0])})}}try{module.exports=Dictionary}catch(e){}try{____errors2=require("./errors")}catch(e){____errors2=Errors}class List extends Collection{constructor(e){super(!1,e)}get last(){try{return this.__last}catch(e){return!1}}add(e){switch(this.type){case"any":return this.push(e);case"int":if(this.isInt(e))return this.push(e);break;case"float":if(this.isFloat(e))return this.push(e);break;default:if(typeof e===this.type)return this.push(e)}throw ____errors2.wrongType(this.type)}remove(e){this.splice(e)}forEach(e){this.__forEach(t=>{e(t)})}isInt(e){return"number"==typeof e&&e%1==0}isFloat(e){return"number"==typeof e&&e%1!=0}}try{module.exports=List}catch(e){}